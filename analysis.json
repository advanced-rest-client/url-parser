{
  "schema_version": "1.0.0",
  "classes": [
    {
      "description": "Implements logic for parsing URL string.",
      "summary": "",
      "path": "url-parser.js",
      "properties": [],
      "methods": [
        {
          "name": "_parseProtocol",
          "description": "Returns protocol value in format `protocol` + ':'",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 46,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "URL to parse."
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Value of the protocol or undefined if\nvalue not set"
          }
        },
        {
          "name": "_parseHost",
          "description": "Gets a host value from the url.\nIt reads the whole authority value of given `value`. It doesn't parses it\nto host, port and\ncredentials parts. For URL panel it's enough.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 70,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The URL to parse"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Value of the host or undefined."
          }
        },
        {
          "name": "_parsePath",
          "description": "Parses the path part of the URL.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "URL value"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Path part of the URL"
          }
        },
        {
          "name": "_parseSearch",
          "description": "Returns query parameters string (without the '?' sign) as a whole.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 2
            },
            "end": {
              "line": 122,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The URL to parse"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Value of the search string or undefined."
          }
        },
        {
          "name": "_parseAnchor",
          "description": "Reads a value of the anchor (or hash) parameter without the `#` sign.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 2
            },
            "end": {
              "line": 138,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The URL to parse"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Value of the anchor (hash) or undefined."
          }
        },
        {
          "name": "_parseSearchParams",
          "description": "Returns an array of items where each item is an array where first\nitem is param name and second is it's value. Both always strings.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 2
            },
            "end": {
              "line": 166,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "search",
              "type": "?String",
              "description": "Parsed search parameter"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Always returns an array."
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 167,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "UrlValueParser"
    },
    {
      "description": "A class to parse URL string.",
      "summary": "",
      "path": "url-parser.js",
      "properties": [],
      "methods": [
        {
          "name": "_parseProtocol",
          "description": "Returns protocol value in format `protocol` + ':'",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 46,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "URL to parse."
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Value of the protocol or undefined if\nvalue not set"
          },
          "inheritedFrom": "UrlValueParser"
        },
        {
          "name": "_parseHost",
          "description": "Gets a host value from the url.\nIt reads the whole authority value of given `value`. It doesn't parses it\nto host, port and\ncredentials parts. For URL panel it's enough.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 70,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The URL to parse"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Value of the host or undefined."
          },
          "inheritedFrom": "UrlValueParser"
        },
        {
          "name": "_parsePath",
          "description": "Parses the path part of the URL.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "URL value"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Path part of the URL"
          },
          "inheritedFrom": "UrlValueParser"
        },
        {
          "name": "_parseSearch",
          "description": "Returns query parameters string (without the '?' sign) as a whole.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 2
            },
            "end": {
              "line": 122,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The URL to parse"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Value of the search string or undefined."
          },
          "inheritedFrom": "UrlValueParser"
        },
        {
          "name": "_parseAnchor",
          "description": "Reads a value of the anchor (or hash) parameter without the `#` sign.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 2
            },
            "end": {
              "line": 138,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The URL to parse"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Value of the anchor (hash) or undefined."
          },
          "inheritedFrom": "UrlValueParser"
        },
        {
          "name": "_parseSearchParams",
          "description": "Returns an array of items where each item is an array where first\nitem is param name and second is it's value. Both always strings.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 2
            },
            "end": {
              "line": 166,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "search",
              "type": "?String",
              "description": "Parsed search parameter"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Always returns an array."
          },
          "inheritedFrom": "UrlValueParser"
        },
        {
          "name": "toString",
          "description": "Returns the URL for current settings.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 2
            },
            "end": {
              "line": 354,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String",
            "desc": "URL value."
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 171,
          "column": 0
        },
        "end": {
          "line": 355,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "UrlValueParser",
      "name": "UrlParser"
    }
  ]
}
